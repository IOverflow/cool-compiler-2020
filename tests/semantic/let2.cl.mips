
# Code generated by PyCoolc.
# Eliane Puerta, Liset Alfaro, Adrian Gonzalez --- Fri Nov 27 23:13:47 2020
# School of Math and Computer Science, University of Havana
# 

.data
A: 
   B: 
      C: 
         D: 
            E: 
               F: 
                  Main: 
                     # 


.data
#  **** VTABLE for type A ****
A_vtable:   .word    function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object
# 


#  **** Type RECORD for type A ****
A_start: 
   A_vtable_pointer:   .word    A_vtable
   A_end: 
# 


.data
#  **** VTABLE for type B ****
B_vtable:   .word    
# 


#  **** Type RECORD for type B ****
B_start: 
   B_vtable_pointer:   .word    B_vtable
   B_end: 
# 


.data
#  **** VTABLE for type C ****
C_vtable:   .word    
# 


#  **** Type RECORD for type C ****
C_start: 
   C_vtable_pointer:   .word    C_vtable
   C_end: 
# 


.data
#  **** VTABLE for type D ****
D_vtable:   .word    
# 


#  **** Type RECORD for type D ****
D_start: 
   D_vtable_pointer:   .word    D_vtable
   D_end: 
# 


.data
#  **** VTABLE for type E ****
E_vtable:   .word    
# 


#  **** Type RECORD for type E ****
E_start: 
   E_vtable_pointer:   .word    E_vtable
   E_end: 
# 


.data
#  **** VTABLE for type F ****
F_vtable:   .word    
# 


#  **** Type RECORD for type F ****
F_start: 
   F_vtable_pointer:   .word    F_vtable
   F_end: 
# 


.data
#  **** VTABLE for type Main ****
Main_vtable:   .word    function_out_string_at_IO, function_out_int_at_IO, function_in_string_at_IO, function_in_int_at_IO, function_abort_at_IO, function_type_name_at_IO, function_copy_at_IO, function_main_at_Main
# 


#  **** Type RECORD for type Main ****
Main_start: 
   Main_vtable_pointer:   .word    Main_vtable
   Main_attrib_b:   .word    0
   Main_attrib_test:   .word    0
   Main_end: 
# 


.data
data_0:   .asciiz    
# 


.data
__Object_Object_tdt_entry__:   .word    0
__Object_Int_tdt_entry__:   .word    1
__Object_String_tdt_entry__:   .word    1
__Object_Bool_tdt_entry__:   .word    1
__Object_IO_tdt_entry__:   .word    1
__Object_A_tdt_entry__:   .word    1
__Object_B_tdt_entry__:   .word    2
__Object_C_tdt_entry__:   .word    3
__Object_D_tdt_entry__:   .word    3
__Object_E_tdt_entry__:   .word    3
__Object_F_tdt_entry__:   .word    2
__Object_Main_tdt_entry__:   .word    2
__Int_Object_tdt_entry__:   .word    -1
__Int_Int_tdt_entry__:   .word    0
__Int_String_tdt_entry__:   .word    -1
__Int_Bool_tdt_entry__:   .word    -1
__Int_IO_tdt_entry__:   .word    -1
__Int_A_tdt_entry__:   .word    -1
__Int_B_tdt_entry__:   .word    -1
__Int_C_tdt_entry__:   .word    -1
__Int_D_tdt_entry__:   .word    -1
__Int_E_tdt_entry__:   .word    -1
__Int_F_tdt_entry__:   .word    -1
__Int_Main_tdt_entry__:   .word    -1
__String_Object_tdt_entry__:   .word    -1
__String_Int_tdt_entry__:   .word    -1
__String_String_tdt_entry__:   .word    0
__String_Bool_tdt_entry__:   .word    -1
__String_IO_tdt_entry__:   .word    -1
__String_A_tdt_entry__:   .word    -1
__String_B_tdt_entry__:   .word    -1
__String_C_tdt_entry__:   .word    -1
__String_D_tdt_entry__:   .word    -1
__String_E_tdt_entry__:   .word    -1
__String_F_tdt_entry__:   .word    -1
__String_Main_tdt_entry__:   .word    -1
__Bool_Object_tdt_entry__:   .word    -1
__Bool_Int_tdt_entry__:   .word    -1
__Bool_String_tdt_entry__:   .word    -1
__Bool_Bool_tdt_entry__:   .word    0
__Bool_IO_tdt_entry__:   .word    -1
__Bool_A_tdt_entry__:   .word    -1
__Bool_B_tdt_entry__:   .word    -1
__Bool_C_tdt_entry__:   .word    -1
__Bool_D_tdt_entry__:   .word    -1
__Bool_E_tdt_entry__:   .word    -1
__Bool_F_tdt_entry__:   .word    -1
__Bool_Main_tdt_entry__:   .word    -1
__IO_Object_tdt_entry__:   .word    -1
__IO_Int_tdt_entry__:   .word    -1
__IO_String_tdt_entry__:   .word    -1
__IO_Bool_tdt_entry__:   .word    -1
__IO_IO_tdt_entry__:   .word    0
__IO_A_tdt_entry__:   .word    -1
__IO_B_tdt_entry__:   .word    -1
__IO_C_tdt_entry__:   .word    -1
__IO_D_tdt_entry__:   .word    -1
__IO_E_tdt_entry__:   .word    -1
__IO_F_tdt_entry__:   .word    -1
__IO_Main_tdt_entry__:   .word    1
__A_Object_tdt_entry__:   .word    -1
__A_Int_tdt_entry__:   .word    -1
__A_String_tdt_entry__:   .word    -1
__A_Bool_tdt_entry__:   .word    -1
__A_IO_tdt_entry__:   .word    -1
__A_A_tdt_entry__:   .word    0
__A_B_tdt_entry__:   .word    1
__A_C_tdt_entry__:   .word    2
__A_D_tdt_entry__:   .word    2
__A_E_tdt_entry__:   .word    2
__A_F_tdt_entry__:   .word    1
__A_Main_tdt_entry__:   .word    -1
__B_Object_tdt_entry__:   .word    -1
__B_Int_tdt_entry__:   .word    -1
__B_String_tdt_entry__:   .word    -1
__B_Bool_tdt_entry__:   .word    -1
__B_IO_tdt_entry__:   .word    -1
__B_A_tdt_entry__:   .word    -1
__B_B_tdt_entry__:   .word    0
__B_C_tdt_entry__:   .word    1
__B_D_tdt_entry__:   .word    1
__B_E_tdt_entry__:   .word    1
__B_F_tdt_entry__:   .word    -1
__B_Main_tdt_entry__:   .word    -1
__C_Object_tdt_entry__:   .word    -1
__C_Int_tdt_entry__:   .word    -1
__C_String_tdt_entry__:   .word    -1
__C_Bool_tdt_entry__:   .word    -1
__C_IO_tdt_entry__:   .word    -1
__C_A_tdt_entry__:   .word    -1
__C_B_tdt_entry__:   .word    -1
__C_C_tdt_entry__:   .word    0
__C_D_tdt_entry__:   .word    -1
__C_E_tdt_entry__:   .word    -1
__C_F_tdt_entry__:   .word    -1
__C_Main_tdt_entry__:   .word    -1
__D_Object_tdt_entry__:   .word    -1
__D_Int_tdt_entry__:   .word    -1
__D_String_tdt_entry__:   .word    -1
__D_Bool_tdt_entry__:   .word    -1
__D_IO_tdt_entry__:   .word    -1
__D_A_tdt_entry__:   .word    -1
__D_B_tdt_entry__:   .word    -1
__D_C_tdt_entry__:   .word    -1
__D_D_tdt_entry__:   .word    0
__D_E_tdt_entry__:   .word    -1
__D_F_tdt_entry__:   .word    -1
__D_Main_tdt_entry__:   .word    -1
__E_Object_tdt_entry__:   .word    -1
__E_Int_tdt_entry__:   .word    -1
__E_String_tdt_entry__:   .word    -1
__E_Bool_tdt_entry__:   .word    -1
__E_IO_tdt_entry__:   .word    -1
__E_A_tdt_entry__:   .word    -1
__E_B_tdt_entry__:   .word    -1
__E_C_tdt_entry__:   .word    -1
__E_D_tdt_entry__:   .word    -1
__E_E_tdt_entry__:   .word    0
__E_F_tdt_entry__:   .word    -1
__E_Main_tdt_entry__:   .word    -1
__F_Object_tdt_entry__:   .word    -1
__F_Int_tdt_entry__:   .word    -1
__F_String_tdt_entry__:   .word    -1
__F_Bool_tdt_entry__:   .word    -1
__F_IO_tdt_entry__:   .word    -1
__F_A_tdt_entry__:   .word    -1
__F_B_tdt_entry__:   .word    -1
__F_C_tdt_entry__:   .word    -1
__F_D_tdt_entry__:   .word    -1
__F_E_tdt_entry__:   .word    -1
__F_F_tdt_entry__:   .word    0
__F_Main_tdt_entry__:   .word    -1
__Main_Object_tdt_entry__:   .word    -1
__Main_Int_tdt_entry__:   .word    -1
__Main_String_tdt_entry__:   .word    -1
__Main_Bool_tdt_entry__:   .word    -1
__Main_IO_tdt_entry__:   .word    -1
__Main_A_tdt_entry__:   .word    -1
__Main_B_tdt_entry__:   .word    -1
__Main_C_tdt_entry__:   .word    -1
__Main_D_tdt_entry__:   .word    -1
__Main_E_tdt_entry__:   .word    -1
__Main_F_tdt_entry__:   .word    -1
__Main_Main_tdt_entry__:   .word    0
# 


.data
data_2:   .asciiz    "Hello World!"
# 


.text
main: 
   jal entry
   # syscall code 10 is for exit
   li $v0, 10
   syscall
   # main END

.text
# function_in_string_at_IO implementation.
# @Params:
function_in_string_at_IO: 
   # Allocate stack frame for function function_in_string_at_IO.
   subu $sp, $sp, 32
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 32
   # RETURN local_in_string_at_IO_internal_0
   lw $v0, -4($fp)
   # Deallocate stack frame for function function_in_string_at_IO.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 32
   jr $ra
   # Function END


.text
# function_out_int_at_IO implementation.
# @Params:
# 	0($fp) = param_out_int_at_IO_x_0
function_out_int_at_IO: 
   # Allocate stack frame for function function_out_int_at_IO.
   subu $sp, $sp, 32
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 32
   # PRINT_INT param_out_int_at_IO_x_0
   # PARAM param_out_int_at_IO_x_0 --> 0($fp)
   lw $a0, 0($fp)
   li $v0, 1
   syscall
   # RETURN
   # Deallocate stack frame for function function_out_int_at_IO.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 32
   # Deallocate function args
   addu $sp, $sp, 4
   jr $ra
   # Function END


.text
# function_out_string_at_IO implementation.
# @Params:
# 	0($fp) = param_out_string_at_IO_x_0
function_out_string_at_IO: 
   # Allocate stack frame for function function_out_string_at_IO.
   subu $sp, $sp, 32
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 32
   # PARAM param_out_string_at_IO_x_0 --> 0($fp)
   # PRINT_STR param_out_string_at_IO_x_0
   lw $a0, 0($fp)
   li $v0, 4
   syscall
   # RETURN
   # Deallocate stack frame for function function_out_string_at_IO.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 32
   # Deallocate function args
   addu $sp, $sp, 4
   jr $ra
   # Function END


.text
# function_in_int_at_IO implementation.
# @Params:
function_in_int_at_IO: 
   # Allocate stack frame for function function_in_int_at_IO.
   subu $sp, $sp, 32
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 32
   # LOCAL local_in_int_at_IO_internal_0 --> -4($fp)
   # local_in_int_at_IO_internal_0 = READ_INT
   li $v0, 5
   syscall
   sw $v0, -4($fp)
   # RETURN local_in_int_at_IO_internal_0
   lw $v0, -4($fp)
   # Deallocate stack frame for function function_in_int_at_IO.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 32
   jr $ra
   # Function END


.text
# function_abort_at_Object implementation.
# @Params:
function_abort_at_Object: 
   # Allocate stack frame for function function_abort_at_Object.
   subu $sp, $sp, 32
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 32
   # Function END


.text
# function_copy_at_Object implementation.
# @Params:
function_copy_at_Object: 
   # Allocate stack frame for function function_copy_at_Object.
   subu $sp, $sp, 32
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 32
   # LOCAL local_copy_at_Object_internal_0 --> -4($fp)
   # local_copy_at_Object_internal_0 = SELF
   sw $s1, -4($fp)
   # RETURN local_copy_at_Object_internal_1
   lw $v0, -8($fp)
   # Deallocate stack frame for function function_copy_at_Object.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 32
   jr $ra
   # Function END


.text
# entry implementation.
# @Params:
entry: 
   # Allocate stack frame for function entry.
   subu $sp, $sp, 32
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 32
   # LOCAL local__internal_0 --> -4($fp)
   # local__internal_0 = ALLOCATE Main
   # Allocating 16 bytes of memory
   li $a0, 16
   li $v0, 9
   syscall
   la $t0, Main
   sw $t0, 0($v0)
   la $t0, Main_start
   sw $t0, 4($v0)
   move $t1, $v0
   jal __Main__attrib__b__init
   sw $v0, 8($t1)
   jal __Main__attrib__test__init
   sw $v0, 12($t1)
   sw $t1, -4($fp)
   # ARG local__internal_0
   # LOCAL local__internal_0 --> -4($fp)
   lw $t0, -4($fp)
   # Push arg into stack
   subu $sp, $sp, 4
   sw $t0, 0($sp)
   # local__internal_1 = CALL function_main_at_Main
   # LOCAL local__internal_1 --> -8($fp)
   jal function_main_at_Main
   sw $v0, -8($fp)
   # RETURN 0
   li $v0, 0
   # Deallocate stack frame for function entry.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 32
   jr $ra
   # Function END


.text
# __Main__attrib__b__init implementation.
# @Params:
__Main__attrib__b__init: 
   # Allocate stack frame for function __Main__attrib__b__init.
   subu $sp, $sp, 40
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 40
   # LOCAL local_ttrib__b__init_a_0 --> -4($fp)
   # local_ttrib__b__init_a_0 = 0
   li $t0, 0
   sw $t0, -4($fp)
   # LOCAL local_ttrib__b__init_a_1 --> -8($fp)
   # local_ttrib__b__init_a_1 = 5
   li $t0, 5
   sw $t0, -8($fp)
   # LOCAL local_ttrib__b__init_a_2 --> -12($fp)
   # local_ttrib__b__init_a_2 = 0
   li $t0, 0
   sw $t0, -12($fp)
   # LOCAL local_ttrib__b__init_internal_4 --> -20($fp)
   # local_ttrib__b__init_internal_4 = ALLOCATE F
   # Allocating 8 bytes of memory
   li $a0, 8
   li $v0, 9
   syscall
   la $t0, F
   sw $t0, 0($v0)
   la $t0, F_start
   sw $t0, 4($v0)
   move $t1, $v0
   sw $t1, -20($fp)
   # LOCAL local_ttrib__b__init_a_3 --> -16($fp)
   # LOCAL local_ttrib__b__init_internal_4 --> -20($fp)
   # local_ttrib__b__init_a_3 = local_ttrib__b__init_internal_4
   lw $t0, -20($fp)
   sw $t0, -16($fp)
   # LOCAL local_ttrib__b__init_b_5 --> -24($fp)
   # local_ttrib__b__init_b_5 = ALLOCATE B
   # Allocating 8 bytes of memory
   li $a0, 8
   li $v0, 9
   syscall
   la $t0, B
   sw $t0, 0($v0)
   la $t0, B_start
   sw $t0, 4($v0)
   move $t1, $v0
   sw $t1, -24($fp)
   # LOCAL local_ttrib__b__init_internal_6 --> -28($fp)
   # local_ttrib__b__init_internal_6 = ALLOCATE E
   # Allocating 8 bytes of memory
   li $a0, 8
   li $v0, 9
   syscall
   la $t0, E
   sw $t0, 0($v0)
   la $t0, E_start
   sw $t0, 4($v0)
   move $t1, $v0
   sw $t1, -28($fp)
   # LOCAL local_ttrib__b__init_b_5 --> -24($fp)
   # LOCAL local_ttrib__b__init_internal_6 --> -28($fp)
   # local_ttrib__b__init_b_5 = local_ttrib__b__init_internal_6
   lw $t0, -28($fp)
   sw $t0, -24($fp)
   # local_ttrib__b__init_internal_7 = GETATTRIBUTE b Main
   # LOCAL local_ttrib__b__init_internal_7 --> -32($fp)
   lw $t0, 8($s1)
   sw $t0, -32($fp)
   # RETURN local_ttrib__b__init_internal_7
   lw $v0, -32($fp)
   # Deallocate stack frame for function __Main__attrib__b__init.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 40
   jr $ra
   # Function END


.text
# __Main__attrib__test__init implementation.
# @Params:
__Main__attrib__test__init: 
   # Allocate stack frame for function __Main__attrib__test__init.
   subu $sp, $sp, 40
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 40
   # LOCAL local_ttrib__test__init_a_0 --> -4($fp)
   # local_ttrib__test__init_a_0 = 0
   li $t0, 0
   sw $t0, -4($fp)
   # LOCAL local_ttrib__test__init_a_1 --> -8($fp)
   # local_ttrib__test__init_a_1 = 5
   li $t0, 5
   sw $t0, -8($fp)
   # LOCAL local_ttrib__test__init_a_2 --> -12($fp)
   # local_ttrib__test__init_a_2 = 0
   li $t0, 0
   sw $t0, -12($fp)
   # LOCAL local_ttrib__test__init_internal_4 --> -20($fp)
   # local_ttrib__test__init_internal_4 = ALLOCATE F
   # Allocating 8 bytes of memory
   li $a0, 8
   li $v0, 9
   syscall
   la $t0, F
   sw $t0, 0($v0)
   la $t0, F_start
   sw $t0, 4($v0)
   move $t1, $v0
   sw $t1, -20($fp)
   # LOCAL local_ttrib__test__init_a_3 --> -16($fp)
   # LOCAL local_ttrib__test__init_internal_4 --> -20($fp)
   # local_ttrib__test__init_a_3 = local_ttrib__test__init_internal_4
   lw $t0, -20($fp)
   sw $t0, -16($fp)
   # LOCAL local_ttrib__test__init_b_5 --> -24($fp)
   # local_ttrib__test__init_b_5 = ALLOCATE B
   # Allocating 8 bytes of memory
   li $a0, 8
   li $v0, 9
   syscall
   la $t0, B
   sw $t0, 0($v0)
   la $t0, B_start
   sw $t0, 4($v0)
   move $t1, $v0
   sw $t1, -24($fp)
   # LOCAL local_ttrib__test__init_internal_6 --> -28($fp)
   # local_ttrib__test__init_internal_6 = ALLOCATE E
   # Allocating 8 bytes of memory
   li $a0, 8
   li $v0, 9
   syscall
   la $t0, E
   sw $t0, 0($v0)
   la $t0, E_start
   sw $t0, 4($v0)
   move $t1, $v0
   sw $t1, -28($fp)
   # LOCAL local_ttrib__test__init_b_5 --> -24($fp)
   # LOCAL local_ttrib__test__init_internal_6 --> -28($fp)
   # local_ttrib__test__init_b_5 = local_ttrib__test__init_internal_6
   lw $t0, -28($fp)
   sw $t0, -24($fp)
   # local_ttrib__test__init_internal_7 = GETATTRIBUTE b Main
   # LOCAL local_ttrib__test__init_internal_7 --> -32($fp)
   lw $t0, 8($s1)
   sw $t0, -32($fp)
   # RETURN local_ttrib__test__init_internal_7
   lw $v0, -32($fp)
   # Deallocate stack frame for function __Main__attrib__test__init.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 40
   jr $ra
   # Function END


.text
# function_main_at_Main implementation.
# @Params:
function_main_at_Main: 
   # Allocate stack frame for function function_main_at_Main.
   subu $sp, $sp, 32
   sw $ra, 4($sp)
   sw $fp, 0($sp)
   addu $fp, $sp, 32
   # LOCAL local_main_at_Main_internal_2 --> -12($fp)
   # local_main_at_Main_internal_2 = SELF
   sw $s1, -12($fp)
   # local_main_at_Main_internal_0 = TYPEOF local_main_at_Main_internal_2
   lw $t0, -12($fp)
   # Load pointer to type
   lw $t1, 4($t0)
   sw $t1, -4($fp)
   # LOCAL local_main_at_Main_internal_3 --> -16($fp)
   # 
   lw $t0, data_2
   sw $t0, -16($fp)
   # ARG local_main_at_Main_internal_3
   # LOCAL local_main_at_Main_internal_3 --> -16($fp)
   lw $t0, -16($fp)
   # Push arg into stack
   subu $sp, $sp, 4
   sw $t0, 0($sp)
   # LOCAL local_main_at_Main_internal_0 --> -4($fp)
   # LOCAL local_main_at_Main_internal_1 --> -8($fp)
   # local_main_at_Main_internal_1 = VCALL local_main_at_Main_internal_0 out_string
   # Save current self pointer in $a1
   move $a1, $s1
   # Save new self pointer in $s1
   lw $s1, -4($fp)
   # Get pointer to type
   lw $t0, -4($fp)
   # Get pointer to type's VTABLE
   lw $t1, 0($t0)
   # Get pointer to function address
   lw $t2, 0($t1)
   # Call function. Result is on $v0
   jalr $t2
   sw $v0, -8($fp)
   # Restore self pointer after function call
   move $s1, $a1
   # RETURN local_main_at_Main_internal_1
   lw $v0, -8($fp)
   # Deallocate stack frame for function function_main_at_Main.
   # Restore $ra
   lw $ra, 4($sp)
   # Restore $fp
   lw $fp, 0($sp)
   # Restore Stack pointer $sp
   addu $sp, $sp, 32
   jr $ra
   # Function END

